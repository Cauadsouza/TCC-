/*
* {
    margin: 0;
    padding: 0;
}

ul {
    display: flex;
    flex-direction: column;
    list-style: none;
}

#lista-inicial li{
    font-size: 20px;
    border-bottom: solid black;
    border-width: 1px;
}

a {
    color: whitesmoke;
    line-height: 5;
}

a:hover {
    opacity: 0.7;
    cursor: pointer;
    color: red;
}

#Dados-Alimentos {
    background-color: rgb(87, 116, 68);
    background-size: cover;
    width: 100%;
    height: 100vh;
    display: flex;
    flex-direction: row;
    justify-content:space-around;
    align-items: center;
}

#lista-alimentos{
    background-color: rgb(87, 116, 68);
    background-size: cover;
    width: 68%;
    height: 100vh;
    display: flex;
    justify-content: center;
    flex-direction: column;
    line-height: 1.5;
    margin: 5em;
}

#div-alimentos{

}

#cda{
    font-size: 44px;
}

#div-infos{
    background-color: #137474;
    width: 100%;
    height: 100vh;
    display: flex;
    align-items: center;
}

  <div class="card add-car">
      <h5 class="card-header">Adicionar/Atualizar carro</h5>
      <div class="card-body">
          <form id="add-form" (ngSubmit)="f.form.valid && saveCar(f)" #f="ngForm" novalidate>
            <div class="form-group">
                <label for="model">Modelo</label>
                <input type="text" [(ngModel)]="car.model" id="model" name="model" #model="ngModel" required class="form-control" [ngClass]="{ 'is-invalid': f.submitted && model.invalid }" placeholder="Digite o modelo">
                <div *ngIf="f.submitted && model.invalid" class="invalid-feedback">
                    <div *ngIf="model.errors.required">Modelo é obrigatório</div>
                </div>
            </div>
            <div class="form-group">
                <label for="color">Cor</label>
                <input type="text" [(ngModel)]="car.color" id="color" name="color" #color="ngModel" required class="form-control" [ngClass]="{ 'is-invalid': f.submitted && color.invalid }" placeholder="Digite a cor">
                <div *ngIf="f.submitted && color.invalid" class="invalid-feedback">
                    <div *ngIf="color.errors.required">Cor é obrigatória</div>
                </div>
            </div>
            <div class="form-group">
                <label for="price">Preço</label>
                <input type="number" [(ngModel)]="car.price" id="price" name="price" #price="ngModel" required class="form-control" [ngClass]="{ 'is-invalid': f.submitted && price.invalid }" placeholder="Digite o preço">
                <div *ngIf="f.submitted && price.invalid" class="invalid-feedback">
                    <div *ngIf="price.errors.required">Preço é obrigatório</div>
                </div>
            </div>
            <button type="submit" class="btn btn-primary btn-add-car">Salvar</button>
            <button type="reset" class="btn btn-secondary btn-add-car" (click)="cleanForm(f)">Cancelar</button>
          </form>
      </div>
    </div>
</div> */